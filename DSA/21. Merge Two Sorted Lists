/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        
        if(list1 == null && list2 == null)
            return null;
        
        if(list1 == null)
            return list2;
        
        if(list2 == null)
            return list1;
        
        ListNode head = null;
        ListNode mergedListNode = null;
        
        if(list1.val < list2.val){
            mergedListNode = list1;
            head = list1;
            list1 = list1.next;
        } else {
            mergedListNode = list2;
            head = list2;
            list2 = list2.next;
        }
        
        while(list1 != null || list2 != null){
            if(list1 == null && list2 == null)
                break;
            else if (list1 == null){
                mergedListNode.next = list2;
                list2 = list2.next;
            } else if (list2 == null){
                mergedListNode.next = list1;
                 list1 = list1.next;
            } else {
                if(list1.val < list2.val){
                    mergedListNode.next = list1;
                    list1 = list1.next;
                } else {
                    mergedListNode.next = list2;
                    list2 = list2.next;
                }
            }
            mergedListNode = mergedListNode.next;
        }
        
        return head;
    }
}